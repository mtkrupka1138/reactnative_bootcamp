{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/MTKrupka/Desktop/NucampFolder/4-React-Native/React-Native.nosync/nucampsite/components/DirectoryComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Tile } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport Loading from \"./LoadingComponent\";\nimport * as Animatable from 'react-native-animatable';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    campsites: state.campsites\n  };\n};\n\nvar Directory = function (_Component) {\n  _inherits(Directory, _Component);\n\n  var _super = _createSuper(Directory);\n\n  function Directory() {\n    _classCallCheck(this, Directory);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Directory, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigate = this.props.navigation.navigate;\n\n      var renderDirectoryItem = function renderDirectoryItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(Animatable.View, {\n          animation: \"fadeInRightBig\",\n          duration: 2000,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }, React.createElement(Tile, {\n          title: item.name,\n          caption: item.description,\n          featured: true,\n          onPress: function onPress() {\n            return navigate('CampsiteInfo', {\n              campsiteId: item.id\n            });\n          },\n          imageSrc: {\n            uri: baseUrl + item.image\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }));\n      };\n\n      if (this.props.campsites.isLoading) {\n        return React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }\n        });\n      }\n\n      if (this.props.campsites.errMess) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, this.props.campsites.errMess));\n      }\n\n      return React.createElement(FlatList, {\n        data: this.props.campsites.campsites,\n        renderItem: renderDirectoryItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Directory;\n}(Component);\n\nDirectory.navigationOptions = {\n  title: 'Directory'\n};\nexport default connect(mapStateToProps)(Directory);","map":{"version":3,"sources":["/Users/MTKrupka/Desktop/NucampFolder/4-React-Native/React-Native.nosync/nucampsite/components/DirectoryComponent.js"],"names":["React","Component","Tile","connect","baseUrl","Loading","Animatable","mapStateToProps","state","campsites","Directory","navigate","props","navigation","renderDirectoryItem","item","name","description","campsiteId","id","uri","image","isLoading","errMess","toString","navigationOptions","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT;AACA,OAAOC,OAAP;AACA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC;AADd,GAAP;AAGH,CAJD;;IAMMC,S;;;;;;;;;;;;;WAMF,kBAAS;AAAA;;AACL,UAAQC,QAAR,GAAqB,KAAKC,KAAL,CAAWC,UAAhC,CAAQF,QAAR;;AACA,UAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAY;AAAA,YAAVC,IAAU,QAAVA,IAAU;AACpC,eACI,oBAAC,UAAD,CAAY,IAAZ;AAAiB,UAAA,SAAS,EAAC,gBAA3B;AAA4C,UAAA,QAAQ,EAAE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AACI,UAAA,KAAK,EAAEA,IAAI,CAACC,IADhB;AAEI,UAAA,OAAO,EAAED,IAAI,CAACE,WAFlB;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,OAAO,EAAE;AAAA,mBAAMN,QAAQ,CAAC,cAAD,EAAiB;AAAEO,cAAAA,UAAU,EAAEH,IAAI,CAACI;AAAnB,aAAjB,CAAd;AAAA,WAJb;AAKI,UAAA,QAAQ,EAAE;AAACC,YAAAA,GAAG,EAAEhB,OAAO,GAAGW,IAAI,CAACM;AAArB,WALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAWH,OAZD;;AAcA,UAAI,KAAKT,KAAL,CAAWH,SAAX,CAAqBa,SAAzB,EAAoC;AAChC,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,UAAI,KAAKV,KAAL,CAAWH,SAAX,CAAqBc,OAAzB,EAAkC;AAC9B,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,KAAKX,KAAL,CAAWH,SAAX,CAAqBc,OAA5B,CADJ,CADJ;AAKH;;AACD,aACI,oBAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAWH,SAAX,CAAqBA,SAD/B;AAEI,QAAA,UAAU,EAAEK,mBAFhB;AAGI,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACI,EAAL,CAAQK,QAAR,EAAJ;AAAA,SAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;;;EAvCmBvB,S;;AAAlBS,S,CAEKe,iB,GAAoB;AACvBC,EAAAA,KAAK,EAAE;AADgB,C;AAwC/B,eAAevB,OAAO,CAACI,eAAD,CAAP,CAAyBG,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { View, FlatList, Text } from 'react-native';\nimport { Tile } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { baseUrl } from '../shared/baseUrl';\nimport Loading from './LoadingComponent';\nimport * as Animatable from 'react-native-animatable';\n\nconst mapStateToProps = state => {\n    return {\n        campsites: state.campsites\n    };\n};\n\nclass Directory extends Component {\n\n    static navigationOptions = {\n        title: 'Directory'\n    }\n\n    render() {\n        const { navigate } = this.props.navigation;\n        const renderDirectoryItem = ({item}) => {\n            return (\n                <Animatable.View animation='fadeInRightBig' duration={2000}>\n                    <Tile\n                        title={item.name}\n                        caption={item.description}\n                        featured\n                        onPress={() => navigate('CampsiteInfo', { campsiteId: item.id })}\n                        imageSrc={{uri: baseUrl + item.image}}\n                    />\n                </Animatable.View>\n            );\n        };\n\n        if (this.props.campsites.isLoading) {\n            return <Loading />;\n        }\n        if (this.props.campsites.errMess) {\n            return (\n                <View>\n                    <Text>{this.props.campsites.errMess}</Text>\n                </View>\n            );\n        }\n        return (\n            <FlatList\n                data={this.props.campsites.campsites}\n                renderItem={renderDirectoryItem}\n                keyExtractor={item => item.id.toString()}\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Directory);"]},"metadata":{},"sourceType":"module"}