{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/MTKrupka/Desktop/NucampFolder/4-React-Native/React-Native.nosync/nucampsite/components/FavoritesComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ListItem } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    campsites: state.campsites,\n    favorites: state.favorites\n  };\n};\n\nvar Favorites = function (_Component) {\n  _inherits(Favorites, _Component);\n\n  var _super = _createSuper(Favorites);\n\n  function Favorites() {\n    _classCallCheck(this, Favorites);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Favorites, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var navigate = this.props.navigation.navigate;\n\n      var renderFavoriteItem = function renderFavoriteItem(_ref) {\n        var item = _ref.item;\n        return React.createElement(ListItem, {\n          title: item.name,\n          subtitle: item.description,\n          leftAvatar: {\n            source: {\n              uri: baseUrl + item.image\n            }\n          },\n          onPress: function onPress() {\n            return navigate('CampsiteInfo', {\n              campsiteId: item.id\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        });\n      };\n\n      if (this.props.campsites.isLoading) {\n        return React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 20\n          }\n        });\n      }\n\n      if (this.props.campsites.errMess) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, this.props.campsites.errMess));\n      }\n\n      return React.createElement(FlatList, {\n        data: this.props.campsites.campsites.filter(function (campsite) {\n          return _this.props.favorites.includes(campsite.id);\n        }),\n        renderItem: renderFavoriteItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Favorites;\n}(Component);\n\nFavorites.navigationOptions = {\n  title: 'My Favorites'\n};\nexport default connect(mapStateToProps)(Favorites);","map":{"version":3,"sources":["/Users/MTKrupka/Desktop/NucampFolder/4-React-Native/React-Native.nosync/nucampsite/components/FavoritesComponent.js"],"names":["React","Component","ListItem","connect","Loading","baseUrl","mapStateToProps","state","campsites","favorites","Favorites","navigate","props","navigation","renderFavoriteItem","item","name","description","source","uri","image","campsiteId","id","isLoading","errMess","filter","campsite","includes","toString","navigationOptions","title"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT;AACA,SAASC,OAAT;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC,SADd;AAEHC,IAAAA,SAAS,EAAEF,KAAK,CAACE;AAFd,GAAP;AAIH,CALD;;IAOMC,S;;;;;;;;;;;;;WAMF,kBAAS;AAAA;;AACL,UAAQC,QAAR,GAAqB,KAAKC,KAAL,CAAWC,UAAhC,CAAQF,QAAR;;AACA,UAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,OAAY;AAAA,YAAVC,IAAU,QAAVA,IAAU;AACnC,eACI,oBAAC,QAAD;AACI,UAAA,KAAK,EAAEA,IAAI,CAACC,IADhB;AAEI,UAAA,QAAQ,EAAED,IAAI,CAACE,WAFnB;AAGI,UAAA,UAAU,EAAE;AAACC,YAAAA,MAAM,EAAE;AAACC,cAAAA,GAAG,EAAEd,OAAO,GAAGU,IAAI,CAACK;AAArB;AAAT,WAHhB;AAII,UAAA,OAAO,EAAE;AAAA,mBAAMT,QAAQ,CAAC,cAAD,EAAiB;AAACU,cAAAA,UAAU,EAAEN,IAAI,CAACO;AAAlB,aAAjB,CAAd;AAAA,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,OATD;;AAWA,UAAI,KAAKV,KAAL,CAAWJ,SAAX,CAAqBe,SAAzB,EAAoC;AAChC,eAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,UAAI,KAAKX,KAAL,CAAWJ,SAAX,CAAqBgB,OAAzB,EAAkC;AAC9B,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,KAAKZ,KAAL,CAAWJ,SAAX,CAAqBgB,OAA5B,CADJ,CADJ;AAKH;;AACD,aACI,oBAAC,QAAD;AACI,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWJ,SAAX,CAAqBA,SAArB,CAA+BiB,MAA/B,CACF,UAAAC,QAAQ;AAAA,iBAAI,KAAI,CAACd,KAAL,CAAWH,SAAX,CAAqBkB,QAArB,CAA8BD,QAAQ,CAACJ,EAAvC,CAAJ;AAAA,SADN,CADV;AAII,QAAA,UAAU,EAAER,kBAJhB;AAKI,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACO,EAAL,CAAQM,QAAR,EAAJ;AAAA,SALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AASH;;;;EAtCmB3B,S;;AAAlBS,S,CAEKmB,iB,GAAoB;AACvBC,EAAAA,KAAK,EAAE;AADgB,C;AAuC/B,eAAe3B,OAAO,CAACG,eAAD,CAAP,CAAyBI,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { FlatList, View, Text } from 'react-native';\nimport { ListItem } from 'react-native-elements';\nimport { connect } from 'react-redux';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst mapStateToProps = state => {\n    return {\n        campsites: state.campsites,\n        favorites: state.favorites\n    };\n};\n\nclass Favorites extends Component {\n\n    static navigationOptions = {\n        title: 'My Favorites'\n    }\n\n    render() {\n        const { navigate } = this.props.navigation;\n        const renderFavoriteItem = ({item}) => {\n            return (\n                <ListItem\n                    title={item.name}\n                    subtitle={item.description}\n                    leftAvatar={{source: {uri: baseUrl + item.image}}}\n                    onPress={() => navigate('CampsiteInfo', {campsiteId: item.id})}\n                />\n            );\n        };\n\n        if (this.props.campsites.isLoading) {\n            return <Loading />;\n        }\n        if (this.props.campsites.errMess) {\n            return (\n                <View>\n                    <Text>{this.props.campsites.errMess}</Text>\n                </View>\n            );\n        }\n        return (\n            <FlatList\n                data={this.props.campsites.campsites.filter(\n                    campsite => this.props.favorites.includes(campsite.id)\n                )}\n                renderItem={renderFavoriteItem}\n                keyExtractor={item => item.id.toString()}\n            />\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(Favorites);"]},"metadata":{},"sourceType":"module"}