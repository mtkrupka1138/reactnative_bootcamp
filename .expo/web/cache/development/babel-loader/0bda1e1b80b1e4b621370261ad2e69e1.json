{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/MTKrupka/Desktop/NucampFolder/4-React-Native/React-Native.nosync/nucampsite/components/MainComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Home from \"./HomeComponent\";\nimport Directory from \"./DirectoryComponent\";\nimport CampsiteInfo from \"./CampsiteInfoComponent\";\nimport About from \"./AboutComponent\";\nimport Contact from \"./ContactComponent\";\nimport Reservation from \"./ReservationComponent\";\nimport Favorites from \"./FavoritesComponent\";\nimport Login from \"./LoginComponent\";\nimport Constants from 'expo-constants';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer';\nimport { createAppContainer } from 'react-navigation';\nimport { Icon } from 'react-native-elements';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { connect } from 'react-redux';\nimport { fetchCampsites, fetchComments, fetchPromotions, fetchPartners } from \"../redux/ActionCreators\";\nvar mapDispatchToProps = {\n  fetchCampsites: fetchCampsites,\n  fetchComments: fetchComments,\n  fetchPromotions: fetchPromotions,\n  fetchPartners: fetchPartners\n};\nvar DirectoryNavigator = createStackNavigator({\n  Directory: {\n    screen: Directory,\n    navigationOptions: function navigationOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerLeft: React.createElement(Icon, {\n          name: \"list\",\n          type: \"font-awesome\",\n          iconStyle: styles.stackIcon,\n          onPress: function onPress() {\n            return navigation.toggleDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }\n        })\n      };\n    }\n  },\n  CampsiteInfo: {\n    screen: CampsiteInfo\n  }\n}, {\n  initialRouteName: 'Directory',\n  defaultNavigationOptions: {\n    headerStyle: {\n      backgroundColor: '#5637DD'\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      color: '#fff'\n    }\n  }\n});\nvar AboutNavigator = createStackNavigator({\n  About: {\n    screen: About\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref2) {\n    var navigation = _ref2.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"info-circle\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar ContactNavigator = createStackNavigator({\n  Contact: {\n    screen: Contact\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref3) {\n    var navigation = _ref3.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"address-card\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar HomeNavigator = createStackNavigator({\n  Home: {\n    screen: Home\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref4) {\n    var navigation = _ref4.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"home\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar ReservationNavigator = createStackNavigator({\n  Reservation: {\n    screen: Reservation\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref5) {\n    var navigation = _ref5.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"tree\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar FavoritesNavigator = createStackNavigator({\n  Favorites: {\n    screen: Favorites\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref6) {\n    var navigation = _ref6.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"heart\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\nvar LoginNavigator = createStackNavigator({\n  Login: {\n    screen: Login\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref7) {\n    var navigation = _ref7.navigation;\n    return {\n      headerStyle: {\n        backgroundColor: '#5637DD'\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        color: '#fff'\n      },\n      headerLeft: React.createElement(Icon, {\n        name: \"sign-in\",\n        type: \"font-awesome\",\n        iconStyle: styles.stackIcon,\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      })\n    };\n  }\n});\n\nvar CustomDrawerContentComponent = function CustomDrawerContentComponent(props) {\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.container,\n    forceInset: {\n      top: 'always',\n      horizontal: 'never'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.drawerHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: require(\"./images/logo.png\"),\n    style: styles.drawerImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.drawerHeaderText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"NuCamp\"))), React.createElement(DrawerItems, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }))));\n};\n\nvar MainNavigator = createDrawerNavigator({\n  Login: {\n    screen: LoginNavigator,\n    navigationOptions: {\n      drawerIcon: function drawerIcon(_ref8) {\n        var tintColor = _ref8.tintColor;\n        return React.createElement(Icon, {\n          name: \"sign-in\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  },\n  Home: {\n    screen: HomeNavigator,\n    navigationOptions: {\n      drawerIcon: function drawerIcon(_ref9) {\n        var tintColor = _ref9.tintColor;\n        return React.createElement(Icon, {\n          name: \"home\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  },\n  Directory: {\n    screen: DirectoryNavigator,\n    navigationOptions: {\n      drawerIcon: function drawerIcon(_ref10) {\n        var tintColor = _ref10.tintColor;\n        return React.createElement(Icon, {\n          name: \"list\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  },\n  Reservation: {\n    screen: ReservationNavigator,\n    navigationOptions: {\n      drawerLabel: 'Reserve Campsite',\n      drawerIcon: function drawerIcon(_ref11) {\n        var tintColor = _ref11.tintColor;\n        return React.createElement(Icon, {\n          name: \"tree\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  },\n  About: {\n    screen: AboutNavigator,\n    navigationOptions: {\n      drawerLabel: 'About Us',\n      drawerIcon: function drawerIcon(_ref12) {\n        var tintColor = _ref12.tintColor;\n        return React.createElement(Icon, {\n          name: \"info-circle\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  },\n  Contact: {\n    screen: ContactNavigator,\n    navigationOptions: {\n      drawerLabel: 'Contact Us',\n      drawerIcon: function drawerIcon(_ref13) {\n        var tintColor = _ref13.tintColor;\n        return React.createElement(Icon, {\n          name: \"address-card\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  },\n  Favorites: {\n    screen: FavoritesNavigator,\n    navigationOptions: {\n      drawerLabel: 'My Favorites',\n      drawerIcon: function drawerIcon(_ref14) {\n        var tintColor = _ref14.tintColor;\n        return React.createElement(Icon, {\n          name: \"heart\",\n          type: \"font-awesome\",\n          size: 24,\n          color: tintColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }\n}, {\n  initialRouteName: 'Home',\n  drawerBackgroundColor: '#CEC8FF',\n  contentComponent: CustomDrawerContentComponent\n});\nvar AppNavigator = createAppContainer(MainNavigator);\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchCampsites();\n      this.props.fetchComments();\n      this.props.fetchPromotions();\n      this.props.fetchPartners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: Platform.OS === 'ios' ? 0 : Constants.statusBarHeight\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }\n      }, React.createElement(AppNavigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawerHeader: {\n    backgroundColor: '#5637DD',\n    height: 140,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    flexDirection: 'row'\n  },\n  drawerHeaderText: {\n    color: '#fff',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  drawerImage: {\n    margin: 10,\n    height: 60,\n    width: 60\n  },\n  stackIcon: {\n    marginLeft: 10,\n    color: '#fff',\n    fontSize: 24\n  }\n});\nexport default connect(null, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/MTKrupka/Desktop/NucampFolder/4-React-Native/React-Native.nosync/nucampsite/components/MainComponent.js"],"names":["React","Component","Home","Directory","CampsiteInfo","About","Contact","Reservation","Favorites","Login","Constants","createStackNavigator","createDrawerNavigator","DrawerItems","createAppContainer","Icon","SafeAreaView","connect","fetchCampsites","fetchComments","fetchPromotions","fetchPartners","mapDispatchToProps","DirectoryNavigator","screen","navigationOptions","navigation","headerLeft","styles","stackIcon","toggleDrawer","initialRouteName","defaultNavigationOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","color","AboutNavigator","ContactNavigator","HomeNavigator","ReservationNavigator","FavoritesNavigator","LoginNavigator","CustomDrawerContentComponent","props","container","top","horizontal","drawerHeader","flex","require","drawerImage","drawerHeaderText","MainNavigator","drawerIcon","tintColor","drawerLabel","drawerBackgroundColor","contentComponent","AppNavigator","Main","paddingTop","Platform","OS","statusBarHeight","StyleSheet","create","height","alignItems","justifyContent","flexDirection","fontSize","fontWeight","margin","width","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Directory from './DirectoryComponent';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport About from './AboutComponent';\nimport Contact from './ContactComponent';\nimport Reservation from './ReservationComponent';\nimport Favorites from './FavoritesComponent';\nimport Login from './LoginComponent';\nimport Constants from 'expo-constants';\nimport { View, Platform, StyleSheet, Text, ScrollView, Image } from 'react-native';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerItems } from 'react-navigation-drawer';\nimport { createAppContainer } from 'react-navigation';\nimport { Icon } from 'react-native-elements';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport { connect } from 'react-redux';\nimport { fetchCampsites, fetchComments, fetchPromotions, fetchPartners } from '../redux/ActionCreators';\n\n\nconst mapDispatchToProps = {\n    fetchCampsites,\n    fetchComments,\n    fetchPromotions,\n    fetchPartners\n};\n\nconst DirectoryNavigator = createStackNavigator(\n    {\n        Directory: { \n            screen: Directory,\n            navigationOptions: ({navigation}) => ({\n                headerLeft: <Icon\n                    name='list'\n                    type='font-awesome'\n                    iconStyle={styles.stackIcon}\n                    onPress={() => navigation.toggleDrawer()}\n                />\n            })\n        },\n        CampsiteInfo: { screen: CampsiteInfo }\n    },\n    {\n        initialRouteName: 'Directory',\n        defaultNavigationOptions: {\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            }\n        }\n    }\n);\n\nconst AboutNavigator = createStackNavigator(\n    {\n        About: { screen: About }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='info-circle'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst ContactNavigator = createStackNavigator(\n    {\n        Contact: { screen: Contact }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='address-card'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst HomeNavigator = createStackNavigator(\n    {\n        Home: { screen: Home }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='home'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst ReservationNavigator = createStackNavigator(\n    {\n        Reservation: { screen: Reservation }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='tree'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst FavoritesNavigator = createStackNavigator(\n    {\n        Favorites: { screen: Favorites }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='heart'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst LoginNavigator = createStackNavigator(\n    {\n        Login: { screen: Login }\n    },\n    {\n        defaultNavigationOptions: ({navigation}) => ({\n            headerStyle: {\n                backgroundColor: '#5637DD'\n            },\n            headerTintColor: '#fff',\n            headerTitleStyle: {\n                color: '#fff'\n            },\n            headerLeft: <Icon\n                name='sign-in'\n                type='font-awesome'\n                iconStyle={styles.stackIcon}\n                onPress={() => navigation.toggleDrawer()}\n            />\n        })\n    }\n);\n\nconst CustomDrawerContentComponent = props => (\n    <ScrollView>\n        <SafeAreaView \n            style={styles.container}\n            forceInset={{top: 'always', horizontal: 'never'}}>\n            <View style={styles.drawerHeader}>\n                <View style={{flex: 1}}>\n                    <Image source={require('./images/logo.png')} style={styles.drawerImage} />\n                </View>\n                <View style={{flex: 2}}>\n                    <Text style={styles.drawerHeaderText}>NuCamp</Text>\n                </View>\n            </View>\n            <DrawerItems {...props} />\n        </SafeAreaView>\n    </ScrollView>\n);\n\nconst MainNavigator = createDrawerNavigator(\n    {\n        Login: {\n            screen: LoginNavigator,\n            navigationOptions: {\n                drawerIcon: ({tintColor}) => (\n                    <Icon\n                        name='sign-in'\n                        type='font-awesome'\n                        size={24}\n                        color={tintColor}\n                    />\n                )\n            }\n        },\n        Home: {\n            screen: HomeNavigator,\n            navigationOptions: {\n                drawerIcon: ({tintColor}) => (\n                    <Icon\n                        name='home'\n                        type='font-awesome'\n                        size={24}\n                        color={tintColor}\n                    />\n                )\n            }\n        },\n        Directory: {\n            screen: DirectoryNavigator,\n            navigationOptions: {\n                drawerIcon: ({tintColor}) => (\n                    <Icon\n                        name='list'\n                        type='font-awesome'\n                        size={24}\n                        color={tintColor}\n                    />\n                )\n            }\n        },\n        Reservation: {\n            screen: ReservationNavigator,\n            navigationOptions: {\n                drawerLabel: 'Reserve Campsite',\n                drawerIcon: ({tintColor}) => (\n                    <Icon\n                        name='tree'\n                        type='font-awesome'\n                        size={24}\n                        color={tintColor}\n                    />\n                )\n            }\n        },\n        About: {\n            screen: AboutNavigator,\n            navigationOptions: {\n                drawerLabel: 'About Us',\n                drawerIcon: ({tintColor}) => (\n                    <Icon\n                        name='info-circle'\n                        type='font-awesome'\n                        size={24}\n                        color={tintColor}\n                    />\n                )\n            }\n        },\n        Contact: {\n            screen: ContactNavigator,\n            navigationOptions: {\n                drawerLabel: 'Contact Us',\n                drawerIcon: ({tintColor}) => (\n                    <Icon\n                        name='address-card'\n                        type='font-awesome'\n                        size={24}\n                        color={tintColor}\n                    />\n                )\n            }\n        },\n        Favorites: {\n            screen: FavoritesNavigator,\n            navigationOptions: {\n                drawerLabel: 'My Favorites',\n                drawerIcon: ({tintColor}) => (\n                    <Icon\n                        name='heart'\n                        type='font-awesome'\n                        size={24}\n                        color={tintColor}\n                    />\n                )\n            }\n        },\n    },\n    {\n        initialRouteName: 'Home',\n        drawerBackgroundColor: '#CEC8FF',\n        contentComponent: CustomDrawerContentComponent\n    }\n);\n\nconst AppNavigator = createAppContainer(MainNavigator)\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchCampsites();\n        this.props.fetchComments();\n        this.props.fetchPromotions();\n        this.props.fetchPartners();\n    }\n\n    render() {\n        return (\n            <View style={{\n                flex: 1,\n                paddingTop: Platform.OS === 'ios' ? 0 : Constants.statusBarHeight\n            }}>\n                <AppNavigator />\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    drawerHeader: {\n        backgroundColor: '#5637DD',\n        height: 140,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        flexDirection: 'row'\n    },\n    drawerHeaderText: {\n        color: '#fff',\n        fontSize: 24,\n        fontWeight: 'bold'\n    },\n    drawerImage: {\n        margin: 10,\n        height: 60,\n        width: 60\n    },\n    stackIcon: {\n        marginLeft: 10,\n        color: '#fff',\n        fontSize: 24\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Main);"]},"metadata":{},"sourceType":"module"}