{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nexport var partners = function partners() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    partners: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_PARTNERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: null,\n        partners: action.payload\n      });\n\n    case ActionTypes.PARTNERS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        errMess: null,\n        partners: []\n      });\n\n    case ActionTypes.PARTNERS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        errMess: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/MTKrupka/Desktop/NucampFolder/4-React-Native/React-Native.nosync/nucampsite/redux/partners.js"],"names":["ActionTypes","partners","state","isLoading","errMess","action","type","ADD_PARTNERS","payload","PARTNERS_LOADING","PARTNERS_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAEsC;AAAA,MAFrCC,KAEqC,uEAF7B;AAAEC,IAAAA,SAAS,EAAE,IAAb;AACGC,IAAAA,OAAO,EAAE,IADZ;AAEGH,IAAAA,QAAQ,EAAE;AAFb,GAE6B;AAAA,MAAXI,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,6CAAWL,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAE,IAA7C;AAAmDH,QAAAA,QAAQ,EAAEI,MAAM,CAACG;AAApE;;AAEJ,SAAKR,WAAW,CAACS,gBAAjB;AACI,6CAAWP,KAAX;AAAkBC,QAAAA,SAAS,EAAE,IAA7B;AAAmCC,QAAAA,OAAO,EAAE,IAA5C;AAAkDH,QAAAA,QAAQ,EAAE;AAA5D;;AAEJ,SAAKD,WAAW,CAACU,eAAjB;AACI,6CAAWR,KAAX;AAAkBC,QAAAA,SAAS,EAAE,KAA7B;AAAoCC,QAAAA,OAAO,EAAEC,MAAM,CAACG;AAApD;;AAEJ;AACI,aAAON,KAAP;AAXR;AAaH,CAhBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const partners = (state = { isLoading: true,\n                                    errMess: null,\n                                    partners: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PARTNERS:\n            return {...state, isLoading: false, errMess: null, partners: action.payload};\n\n        case ActionTypes.PARTNERS_LOADING:\n            return {...state, isLoading: true, errMess: null, partners: []}\n\n        case ActionTypes.PARTNERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}